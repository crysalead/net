<?php
namespace Lead\Net\Spec\Suite\Mime;

use Exception;
use Lead\Net\Mime\Mime;

describe("Mime", function() {

    describe("::optimalEncoding()", function() {

        it("detects 7bit data", function() {

            expect(Mime::optimalEncoding('a'))->toBe('7bit');

        });

        it("detects quoted-printable data", function() {

            expect(Mime::optimalEncoding('po√©sie'))->toBe('quoted-printable');

        });

        it("detects base64 data", function() {

            expect(Mime::optimalEncoding('–Ø'))->toBe('base64');

        });

    });

    describe("::encode()", function() {

        it("encodes 7bit data", function() {

            expect(Mime::encode('a', '7bit'))->toBe('a');

        });

        it("encodes 8bit encoded data", function() {

            expect(Mime::encode('r–Ø', '8bit'))->toBe('r–Ø');

        });

        it("encodes binary data", function() {

            expect(Mime::encode('r–Ø', 'binary'))->toBe('r–Ø');

        });

        it("encodes quoted-printable encoded data", function() {

            expect(Mime::encode('–Ø', 'quoted-printable'))->toBe('=D0=AF');

        });

        it("encodes base64 encoded data", function() {

            expect(Mime::encode('bar', 'base64'))->toBe('YmFy');

        });

    });

    describe("::encodeEmail()", function() {

        it("encodes IDN emails", function() {

            $emails = [
                'name@ŸÖÿ´ÿßŸÑ.ÿ•ÿÆÿ™ÿ®ÿßÿ±' => 'name@xn--mgbh0fb.xn--kgbechtv',
                'name@ŸÖÿ´ÿßŸÑ.ÿ¢ÿ≤ŸÖÿß€åÿ¥€å' => 'name@xn--mgbh0fb.xn--hgbk6aj7f53bba',
                'name@‰æãÂ≠ê.ÊµãËØï' => 'name@xn--fsqu00a.xn--0zwm56d',
                'name@‰æãÂ≠ê.Ê∏¨Ë©¶' => 'name@xn--fsqu00a.xn--g6w251d',
                'name@–ø—Ä–∏–º–µ—Ä.–∏—Å–ø—ã—Ç–∞–Ω–∏–µ' => 'name@xn--e1afmkfd.xn--80akhbyknj4f',
                'name@‡§â‡§¶‡§æ‡§π‡§∞‡§£.‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ' => 'name@xn--p1b6ci4b4b3a.xn--11b5bs3a9aj6g',
                'name@œÄŒ±œÅŒ¨Œ¥ŒµŒπŒ≥ŒºŒ±.Œ¥ŒøŒ∫ŒπŒºŒÆ' => 'name@xn--hxajbheg2az3al.xn--jxalpdlp',
                'name@Ïã§Î°Ä.ÌÖåÏä§Ìä∏' => 'name@xn--9n2bp8q.xn--9t4b11yi5a',
                'name@◊ë◊≤÷∑◊©◊§÷º◊ô◊ú.◊ò◊¢◊°◊ò' => 'name@xn--fdbk5d8ap9b8a8d.xn--deba0ad',
                'name@‰æã„Åà.„ÉÜ„Çπ„Éà'  => 'name@xn--r8jz45g.xn--zckzah',
                'name@‡Æâ‡Æ§‡Ææ‡Æ∞‡Æ£‡ÆÆ‡Øç.‡Æ™‡Æ∞‡Æø‡Æü‡Øç‡Æö‡Øà' => 'name@xn--zkc6cc5bi7f6e.xn--hlcj6aya9esc7a',
                'name@derhaus√ºberwacher.de' => 'name@xn--derhausberwacher-pzb.de',
                'name@renangon√ßalves.com' => 'name@xn--renangonalves-pgb.com',
                'name@—Ä—Ñ.ru' => 'name@xn--p1ai.ru',
                'name@Œ¥ŒøŒ∫ŒπŒºŒÆ.gr' => 'name@xn--jxalpdlp.gr',
                'name@‡¶´‡¶æ‡¶π‡¶æ‡¶¶‡ßç‡ßß‡ßØ.‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ' => 'name@xn--65bj6btb5gwimc.xn--54b7fta0cc',
                'name@êåÄêåñêåãêåÑêåëêåâ¬∑êååêåÑêåïêåÑêåãêåâêåë.gr' => 'name@xn--uba5533kmaba1adkfh6ch2cg.gr',
                'name@guangdong.Âπø‰∏ú' => 'name@guangdong.xn--xhq521b',
                'name@gw√≥≈∫d≈∫.pl' => 'name@xn--gwd-hna98db.pl',
                'name@Œ¨Œ≠ŒÆŒØŒ∞Œ±Œ≤Œ≥Œ¥ŒµŒ∂Œ∑Œ∏ŒπŒ∫ŒªŒºŒΩŒæŒøœÄœÅœÉœÉœÑœÖœÜœá.com' => 'name@xn--hxacdefghijklmnopqrstuvw0caz0a1a2a.com'
            ];

            foreach ($emails as $email => $encodedEmail) {
                expect(Mime::encodeEmail($email))->toBe($encodedEmail);
            }

        });

    });

    describe("::encodeValue()", function() {

        it("encodes values", function() {

            expect(Mime::encodeValue('abc'))->toBe('abc');
            expect(Mime::encodeValue('abc'))->toBe('abc');
            expect(Mime::encodeValue('a\bc'))->toBe('"a\\\\bc"');
            expect(Mime::encodeValue('"a\bc"'))->toBe('"\"a\\\\bc\""');
            expect(Mime::encodeValue('a.bc'))->toBe('"a.bc"');

            expect(Mime::encodeValue('–ê–Ω–¥—Ä–µ–π –ë–µ–ª—ã–π'))->toBe('=?UTF-8?B?0JDQvdC00YDQtdC5INCR0LXQu9GL0Lk=?=');
            expect(Mime::encodeValue('po√©sie'))->toBe('=?UTF-8?Q?po=C3=A9sie?=');

        });

    });

    describe("::decodeValue()", function() {

        it("decodes values", function() {

            expect(Mime::decodeValue('=?UTF-8?B?0JDQvdC00YDQtdC5INCR0LXQu9GL0Lk=?='))->toBe('–ê–Ω–¥—Ä–µ–π –ë–µ–ª—ã–π');
            expect(Mime::decodeValue('=?UTF-8?Q?po=C3=A9sie?='))->toBe('po√©sie');

        });

    });

});